*******************************************************************************
*******************************************************************************
*                                                                             *
*                                 DEFINITIONS                                 *
*                                                                             *
*******************************************************************************
*******************************************************************************
*
* Encapsilation
* - Hiding pieces of functionality so that it is unavailable to the rest of
*   the code base
* - It defines the boudries of an application to allow for levels of complexity
* - Done by creating objects and exposing interfaces(methods) to interact with 
*   thsoe methods.
*
* Polymorphism
* - the ablitity for datat to be represented by many different types
* 
* Inheritance
* - when a class inherits the behaviors of another class
* Superclass
* - the class that was inherited by another class
* Subclass
* - the class that has inherited another
*
* Module
* - similar to a class but you cannot create an object with a module
*
* Mixin
* - how you add a module into a class
* - use the `include` method
*
* Class
* - the basic outline of what an object should be made of and what it should be
*   able to do
* - objects are created from classes.
* - classes are a mold and objects are what is created out of that mold
* 
* Instance
* - objecs are an instance of a class
* 
